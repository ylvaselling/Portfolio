[
  {
    "id": "0",
    "title": "About me",
    "description": "",
    "text": "Currently I am studying Master of Science in Media Technology and Engineering at Linköping University. In my free time I like to have some projects of my own, usually in 3D-graphics or programming. I have also been involved in the student organisations. Other big interests of mine are hiking, climbing and spending time with friends. :-)",
    "class": [],
    "imageUrlThumbnail": "img/about.jpg",
    "imageUrl": "img/about.jpg"
  },
  {
    "id": "1",
    "title": "2D puzzle game in Unity",
    "description": "In this game the user plays a hero that is going to resque a dragon from an evil princess.",
    "text": "The game was made with Unity and C# and the design was made in Illustrator and Photoshop.",
    "class": ["Games", "Programming", "Design"],
    "imageUrlThumbnail": "img/2Dgamethumbnail2.jpg",
    "imageUrl": "img/2Dgame.png"
  },
  {
    "id": "2",
    "title": "Lego database website",
    "description": "This website was created in an introductory course of web programming. The website has access to a database of Lego pieces and allows the user to display the data in various ways.",
    "text": "The website was programmed in HTML, CSS, Javascript and MySQL.",
    "class": ["Programming", "Design"],
    "imageUrlThumbnail": "img/legothumb.png",
    "imageUrl": "img/lego.png"

  },
  {
    "id": "3",
    "title": "Fishy Clicky - a Unity game",
    "description": "Fishy Clicky is a simple mobile game which was developed in a course with focus of UX. During the development the game was user tested multiple times to make it as user-friendly as possible.",
    "text": "The game was developed in Unity and C# and the design was made in Illustrator and Photoshop. The aim of the game is to click the fish as fast as possible to make it explode.",
    "class": ["Games", "Programming"],
    "imageUrlThumbnail": "img/fishythumbnail.jpg",
    "imageUrl": "img/fishyclicky.jpg"

  },
  {
    "id": "4",
    "title": "3D-model",
    "description": "This 3D-model was modelled and animated in Blender.",
    "text": "The model has a walking cycle and an idle cycle.",
    "class": ["3D-graphics"],
    "imageUrlThumbnail": "img/animation.png",
    "imageUrl": "img/animationheader.png"
  },
  {
    "id": "5",
    "title": "3D-printed figure",
    "description": "This figure was modelled in Blender and then printed in a 3D-printer.",
    "text": "The modelling was an attempt to learn the sculpt mode in Blender. The model is manifold to enable it to be 3D-printed.",
    "class": ["3D-graphics"],
    "imageUrlThumbnail": "img/3Dmodel.jpg",
    "imageUrl": "img/3Dmodel.jpg"
  },
  {
    "id": "6",
    "title": "Automatic backing sound website",
    "description": "This website uses the computer's microphone and detects pitch. The website then plays backing music that harmonizes with the found pitch.",
    "text": "This project was created in a course of sound physics and the algorithm makes use of Fourier transform to detect the pitches in the incoming sound. Furthermore, another algorithm is used to detect the keynote. After that, the program chooses between four different chords to play from.",
    "class": ["Programming"],
    "imageUrlThumbnail": "img/ljudthumb.png",
    "imageUrl": "img/ljud.png"
  },
  {
    "id": "7",
    "title": "3D-environment in Unreal Engine",
    "description": "This 3D-environment features an floating island where the sun sets and rises and soothing music is played. During the night there are countless starts and one can always open a cold beer.",
    "text": "This project was developed in Unreal Engine for a course in 3D-graphics. The sky was programmed from an image where one column of the image was projected onto a sphere that the sky consisted of. The column changed with time to create the effect of the changing sky. The tree, beer and island was modeled in Blender and the ground and grass was modeled in Unreal Engine and animated there as well, along with the leaves of the tree.",
    "class": ["3D-graphics", "Games", "Design"],
    "imageUrlThumbnail": "img/island.png",
    "imageUrl": "img/malseyheader.jpg"
  },
  {
    "id": "8",
    "title": "Portfolio website",
    "description": "The portfolio website features minimalistic design and is responsive.",
    "text": "The website is written in HTML, CSS and javascript. The idea of the program structure was that it should be easy to add new projects and categories. Therefore all data is read from a json-file. The website doesn't have to be reloaded any point - all content is dynamically appended to the DOM in javascript. Furthermore, the website is completely responsive and offers a different layout for smaller screens.",
    "class": ["Design", "Programming"],
    "imageUrlThumbnail": "img/portfoliothumb.png",
    "imageUrl": "img/portfolioheader.png"
  },
  {
    "id": "9",
    "title": "Simulation of clockwork",
    "description": "This physics simulation makes use of numerical solutions in order to approximate partial differential equations.",
    "text": "The numerical solution used was the Euler method and the project was developed in a course of modelling and simulation. The clockwork uses physical equations for pendulums, as well as for moments of inertia for the cogs. When the weight that is driving the clockwork reaches the floor the clock stops - just as a real clock would.",
    "class": ["Programming", "3D-graphics", "Simulation"],
    "imageUrlThumbnail": "img/mosthumb.jpg",
    "imageUrl": "img/mos.jpg"
  },
  {
    "id": "10",
    "title": "Multiplayer mobile game for dome theater",
    "description": "This project was developed as a bachelor project for the Visualization Centre in Norrköping. The visitors of the dome theatre can play this fighting game on their smartphones before a movie starts.",
    "text": "The game was written in C++ with the libraries OpenGL, glm, glew, glfw and SGCT ('Simple graphics clustering') which projects 3D-environments onto a dome screen. The user connects to a server which allows him/her to see an avatar on the dome screen. The user can then move the avatar, choose different weapons and attack other players. A highschore is displayed on a part of the screen. The game uses a combination of 2D- and 3D-graphics.",
    "class": ["Programming", "3D-graphics", "Games"],
    "imageUrlThumbnail": "img/Domegame.jpg",
    "imageUrl": "img/Domegame.jpg"
  },
  {
    "id": "11",
    "title": "Drone defense system for airports",
    "description": "During the summer 2019 I was a project manager at SAAB for a project that developed a defense system for airports for intruding drones.",
    "text": "The role consisted of leading a team of 15 summer interns through a process of developing and implementing a concept. The system consisted of a few subsystems: an image processing unit, a graphical user interface, a navigation system for the drone and a mechanical system for the defense mechanism.",
    "class": ["Programming"],
    "imageUrlThumbnail": "img/dronethumb.jpg",
    "imageUrl": "img/drone.jpg"
  },
  {
    "id": "12",
    "title": "Monte Carlo raytracer",
    "description": "The raytracer simulates light in a room with diffuse, specular and transparent objects.",
    "text": "This raytracer was written in C++ and supports Whitted and Monte Carlo raytracing, as well as diffuse, specular and transparent surfaces. Rays are shot from the eye through a pixel in the camera plane and then the ray bounce around in the scene until it is terminated. The Monte Carlo raytracer makes use of a probability based method, the Monte Carlo method, to solve the rendering equation. The Monte Carlo method is used to simulate soft indirect light. Furthermore, Whitted raytracing is used to simulate transparent and specular surfaces. To reduce noise, supersampling and anti-aliasing was used. To minimise artefacts, a rays are terminated on a random basis which is called 'Russian roulette'.",
    "class": ["Programming", "3D-graphics", "Simulation"],
    "imageUrlThumbnail": "img/raytracer.jpg",
    "imageUrl": "img/raytracer.jpg"
  }
]
